{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x2Ec0867785a41cff95e091fc5bA8282e75775Daa",
    "txHash": "0x8181a75ae8c22913a93c7db16e47848f7bf2edd6d855a79c48c6d0ee2aa22c23"
  },
  "proxies": [
    {
      "address": "0xcBe097667B6500C1B30d360a86d5baC586aA92AC",
      "txHash": "0x57b39b5c56c27dd08aef89703d6b8e97ec360db3c16dd4ff14415a844f288537",
      "kind": "uups"
    },
    {
      "address": "0x822261C0E0AfC5Bc7ef45aB132C6adEaF35d5Ce0",
      "txHash": "0xca46b5739e5e0962879c3bce4c4ac1fd4935bb77192f20bce8cf9e2d7ad17d41",
      "kind": "transparent"
    },
    {
      "address": "0xD6B703F9221D39D112B63151c419326C72f5F373",
      "txHash": "0xff5a848f7cad9bd69c02e7b8fc6a9204848b114e8e78ae1f43d433c269422956",
      "kind": "uups"
    }
  ],
  "impls": {
    "97d8278efecda535ccb039f991a711b7145e711d29a78f288081f5d2da9a4629": {
      "address": "0x9995EBd9f87252e04eed6aFA06E8BC5e2C3D068F",
      "txHash": "0x849a89897d8a712cb2578c6064b6100a5f8b417ea638534e8ac11520aaf217d3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "Factory",
            "label": "implementation",
            "type": "t_address",
            "src": "../project:/contracts/Factory.sol:16"
          },
          {
            "contract": "Factory",
            "label": "clones",
            "type": "t_mapping(t_address,t_array(t_struct(Token)2721_storage)dyn_storage)",
            "src": "../project:/contracts/Factory.sol:17"
          },
          {
            "contract": "Factory",
            "label": "fee",
            "type": "t_uint256",
            "src": "../project:/contracts/Factory.sol:18"
          },
          {
            "contract": "Factory",
            "label": "refund",
            "type": "t_uint256",
            "src": "../project:/contracts/Factory.sol:19"
          },
          {
            "contract": "Factory",
            "label": "users",
            "type": "t_array(t_address)dyn_storage",
            "src": "../project:/contracts/Factory.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_array(t_struct(Token)2721_storage)dyn_storage)": {
            "label": "mapping(address => struct Factory.Token[])"
          },
          "t_array(t_struct(Token)2721_storage)dyn_storage": {
            "label": "struct Factory.Token[]"
          },
          "t_struct(Token)2721_storage": {
            "label": "struct Factory.Token",
            "members": [
              {
                "label": "tokenAddress",
                "type": "t_address"
              },
              {
                "label": "tokenName",
                "type": "t_string_storage"
              },
              {
                "label": "tokenSymbol",
                "type": "t_string_storage"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "initialSupply",
                "type": "t_uint256"
              },
              {
                "label": "timeCreated",
                "type": "t_uint256"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "974a23ef55a15c6af0b1f7c013469bf134373585cb329ac91a56328b88049a7f": {
      "address": "0x5C898118685b2e7FfD58e7ed8ba743F81DB45229",
      "txHash": "0x8a0f430dcc82edcb1d98c74da9b6fdb17b160e9b8edeec61592388c4363a914f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20BurnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "MyToken",
            "label": "newDecimals",
            "type": "t_uint8",
            "src": "../project:/contracts/MyToken.sol:23"
          }
        ],
        "types": {
          "t_uint8": {
            "label": "uint8"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    }
  }
}
